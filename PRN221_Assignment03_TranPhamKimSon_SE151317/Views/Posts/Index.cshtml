@model IEnumerable<PRN221_Assignment03_TranPhamKimSon_SE151317.Models.Post>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<p>
    <form asp-action="Index" method="post">
        <div class="row">
            <div class="col-md-3 col-sm-12">
                <input type="date" class="form-control" name="StartDate">
            </div>
            <div class="col-md-3 col-sm-12">
                <input type="date" class="form-control" name="EndDate">
            </div>
            <div class="col-md-2 col-sm-12">
                <button type="submit" class="btn btn-block btn-primary">Create report</button>
            </div>
        </div>
    </form>
</p>

<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PostId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td id="@item.PostId">
                    @Html.DisplayFor(modelItem => item.PostId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td id="links">
                    <a asp-action="Edit" asp-route-id="@item.PostId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PostId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PostId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">

    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

    <script>
        $(document).ready(function () {
            var tmp = $('#myTable').DataTable();
            console.log(tmp.rows().data());
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0-preview.1.22109.13/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/notification")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().then(() => console.log("OKe"));

        function ready(type, createdDate, updatedDate, title, content, status, authorId, categoryId, postId) {
            addData(postId, createdDate, updatedDate, title, content, status, authorId, categoryId);
        }

        function addData(postId, createdDate, updatedDate, title, content, status, authorId, categoryId) {
            $("#myTable").dataTable().fnDestroy();
            let tmp;
            if (status === "true") {
                tmp = '<input type="checkbox" disabled="disabled" checked />';
            } else {
                tmp = '<input type="checkbox" disabled="disabled" />';
            }
            console.log(postId, createdDate, updatedDate, title, content, status, authorId, categoryId)
            var t = $('#myTable').DataTable({
                columnDefs: [{
                    "defaultContent": '<a href="/Posts/Edit/' + postId + '">Edit</a> | <a href="/Posts/Details/' + postId + '">Details</a> | <a href="/Posts/Delete/' + postId + '">Delete</a>',
                    "targets": -1,
                    "searchable": false,
                }, {
                    "defaultContent": tmp,
                    "targets": -4,
                }
                ],
                "searchable": true,
                destroy: true,
                "bDestroy": true,
            });
            t.row.add([postId, createdDate, updatedDate, title, content, , authorId, categoryId,]).draw(false);
        }

        function deleteData(postId) {
            var t = $('#myTable').DataTable();
            var obj = t.rows().data();
            for (var i = 0 in obj) {
                if (obj[i][0] == postId) {
                    t.row(i).remove().draw(false);
                }
            }
        }

        async function updateData(createdDate, updatedDate, title, content, status, authorId, categoryId, postId) {
            var t = $('#myTable').DataTable();
            var obj = t.rows().data();
            for (var i = 0 in obj) {
                if (obj[i][0] == postId) {
                    let tmp;
                    if (status === "true") {
                        tmp = '<input type="checkbox" disabled="disabled" checked />';
                    } else {
                        tmp = '<input type="checkbox" disabled="disabled" />';
                    }
                    var newData = [postId, createdDate, updatedDate, title, content, tmp, authorId, categoryId, '<a href="/Posts/Edit/' + postId + '">Edit</a> | <a href="/Posts/Details/' + postId + '">Details</a> | <a href="/Posts/Delete/' + postId + '">Delete</a>']
                    t.row(i).data(newData).draw(false);
                }
            }
        }

        function temp() {
            var t = $('#myTable').DataTable();
            console.log(t.rows().data());
        }

        connection.on("RecieveNotiAdd", ready);
        connection.on("RecieveNotiDelete", deleteData);
        connection.on("RecieveNotiUpdate", updateData);
    </script>
}